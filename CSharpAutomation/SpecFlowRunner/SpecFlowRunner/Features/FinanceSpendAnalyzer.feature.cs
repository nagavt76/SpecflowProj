// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowRunner.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("FinanceSpendAnalyzer", Description="\tIn order to analyze payments analysis\r\n\tAs a customer\r\n\tI want to do payments an" +
        "d analyze the spends in periodic manner", SourceFile="Features\\FinanceSpendAnalyzer.feature", SourceLine=0)]
    public partial class FinanceSpendAnalyzerFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FinanceSpendAnalyzer.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FinanceSpendAnalyzer", "\tIn order to analyze payments analysis\r\n\tAs a customer\r\n\tI want to do payments an" +
                    "d analyze the spends in periodic manner", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void AddPaymentSuccessfully(string custId, string amt, string type, string numberOfDay, string desc, string url, string viewPageTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "regression",
                    "payment"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Payment successfully", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given(string.Format("Finance Spend Analyzer app is launched with \'{0}\'", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When(string.Format("I Enter Payment detais \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", custId, amt, type, numberOfDay, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then(string.Format("Payment should be successfull and display Monthly Sppend View page with Title \'{0" +
                        "}\'", viewPageTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add Payment successfully, 2", new string[] {
                "regression",
                "payment"}, SourceLine=13)]
        public virtual void AddPaymentSuccessfully_2()
        {
#line 8
this.AddPaymentSuccessfully("2", "100", "D", "25", "Purchased in shoppers stop", "http://localhost:49846/WebForm1.aspx", "Sample Page", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidateViewPageContent(string custId, string amt, string type, string date, string desc, string url, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "viewTran"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate View Page Content", @__tags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given(string.Format("Finance Spend Analyzer app is launched with \'{0}\'", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.When(string.Format("I Enter Payment detais \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", custId, amt, type, date, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("it should display recently added transaction in Monthly Spend View Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validate View Page Content, 1", new string[] {
                "viewTran"}, SourceLine=22)]
        public virtual void ValidateViewPageContent_1()
        {
#line 17
this.ValidateViewPageContent("1", "100", "D", "24-04-2018", "Purchased in shoppers stop", "https://google.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void BackToPaymentsPageFromViewPageContent(string custId, string amt, string type, string date, string desc, string url, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BackToPayments"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Back to Payments Page from View Page Content", @__tags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given(string.Format("Finance Spend Analyzer app is launched with \'{0}\'", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When(string.Format("I Enter Payment detais \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", custId, amt, type, date, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("Go back from View Transactions page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("it should launch Payments home page again", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Back to Payments Page from View Page Content, 1", new string[] {
                "BackToPayments"}, SourceLine=32)]
        public virtual void BackToPaymentsPageFromViewPageContent_1()
        {
#line 26
this.BackToPaymentsPageFromViewPageContent("1", "100", "D", "24-04-2018", "Purchased in shoppers stop", "https://google.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void FieldValidations(string custId, string amt, string type, string date, string desc, string url, string validationmessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "payment"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Field Validations", @__tags);
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given(string.Format("Finance Spend Analyzer app is launched with \'{0}\'", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.When(string.Format("I Enter Payment detais \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' with Invalid dataa", custId, amt, type, date, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then(string.Format("it displays Error message \'{0}\'", validationmessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Field Validations, Variant 0", new string[] {
                "payment"}, SourceLine=41)]
        public virtual void FieldValidations_Variant0()
        {
#line 36
this.FieldValidations("abc", "100", "D", "24-04-2018", "Purchased in shoppers stop", "https://google.com", "Invalid Custer Id", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Field Validations, Variant 1", new string[] {
                "payment"}, SourceLine=41)]
        public virtual void FieldValidations_Variant1()
        {
#line 36
this.FieldValidations("1", "abc", "D", "24-04-2018", "Purchased in shoppers stop", "https://google.com", "Invalid Amount", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Field Validations, Variant 2", new string[] {
                "payment"}, SourceLine=41)]
        public virtual void FieldValidations_Variant2()
        {
#line 36
this.FieldValidations("1", "100", "Abc", "24-04-2018", "Purchased in shoppers stop", "https://google.com", "Invalid Transaction  Type", ((string[])(null)));
#line hidden
        }
        
        public virtual void AddPaymentWhenAPIIsDown(string custId, string amt, string type, string date, string desc, string url, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "PaymentWithServerDown"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Payment when API is down", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given(string.Format("Finance Spend Analyzer app is launched with \'{0}\'", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("ensure that payment API is down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When(string.Format("I Enter Payment detais \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", custId, amt, type, date, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then(string.Format("It should display valid error message \'{0}\'", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add Payment when API is down, 1", new string[] {
                "PaymentWithServerDown"}, SourceLine=53)]
        public virtual void AddPaymentWhenAPIIsDown_1()
        {
#line 47
this.AddPaymentWhenAPIIsDown("1", "100", "D", "24-04-2018", "Purchased in shoppers stop", "https://google.com", "ErrorMessage", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidateViewPageContentWhenAPIIsDown(string custId, string amt, string type, string date, string desc, string url, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "viewTranWhenAPIisDown"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate View Page Content When API is down", @__tags);
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given(string.Format("Finance Spend Analyzer app is launched with \'{0}\'", url), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("ensure that retrieval API is down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.When(string.Format("I Enter Payment detais \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", custId, amt, type, date, desc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("It should display valid error message \'<ErrorMessage>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validate View Page Content When API is down, 1", new string[] {
                "viewTranWhenAPIisDown"}, SourceLine=63)]
        public virtual void ValidateViewPageContentWhenAPIIsDown_1()
        {
#line 57
this.ValidateViewPageContentWhenAPIIsDown("1", "100", "D", "24-04-2018", "Purchased in shoppers stop", "https://google.com", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
